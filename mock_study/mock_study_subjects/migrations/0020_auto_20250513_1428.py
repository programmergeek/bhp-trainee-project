# Generated by Django 2.2.1 on 2025-05-13 12:28

import _socket
import datetime
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
from django.utils.timezone import utc
import django_revision.revision_field
import edc_base.model_fields.hostname_modification_field
import edc_base.model_fields.userfield
import edc_base.model_fields.uuid_auto_field
import edc_base.model_validators.date
import edc_base.utils
import edc_protocol.validators


class Migration(migrations.Migration):

    dependencies = [
        ('mock_study_subjects', '0019_auto_20250509_1039'),
    ]

    operations = [
        migrations.AlterField(
            model_name='adverseevent',
            name='onset_date',
            field=models.DateField(default=datetime.datetime(2025, 5, 13, 12, 28, 7, 57564, tzinfo=utc)),
        ),
        migrations.AlterField(
            model_name='cbcbloodtestresult',
            name='date_tested',
            field=models.DateField(default=datetime.datetime(2025, 5, 13, 12, 28, 7, 57051, tzinfo=utc)),
        ),
        migrations.AlterField(
            model_name='historicalsubjectscreening',
            name='is_breastfeeding',
            field=models.CharField(choices=[('Yes', 'Yes'), ('No', 'No'), ('N/A', 'Not applicable')], help_text="If 'Yes', then stop. The patient cannot be part of this study. Select 'Not applicable' for male participants.", max_length=20, verbose_name='Is the patient currently breastfeeding?'),
        ),
        migrations.AlterField(
            model_name='historicalsubjectscreening',
            name='is_pregnant',
            field=models.CharField(choices=[('Yes', 'Yes'), ('No', 'No'), ('N/A', 'Not applicable')], help_text="If 'Yes', then stop. The patient cannot be part of this study. Select 'Not applicable' for male participants.", max_length=20, verbose_name='Are they currently pregnant?'),
        ),
        migrations.AlterField(
            model_name='historicalsubjectscreening',
            name='report_datetime',
            field=models.DateTimeField(default=datetime.datetime(2025, 5, 13, 12, 28, 7, 48981, tzinfo=utc), verbose_name='Report date and time.'),
        ),
        migrations.AlterField(
            model_name='subjectbloodsample',
            name='collection_date',
            field=models.DateField(default=datetime.datetime(2025, 5, 13, 12, 28, 7, 55988, tzinfo=utc)),
        ),
        migrations.AlterField(
            model_name='subjectscreening',
            name='is_breastfeeding',
            field=models.CharField(choices=[('Yes', 'Yes'), ('No', 'No'), ('N/A', 'Not applicable')], help_text="If 'Yes', then stop. The patient cannot be part of this study. Select 'Not applicable' for male participants.", max_length=20, verbose_name='Is the patient currently breastfeeding?'),
        ),
        migrations.AlterField(
            model_name='subjectscreening',
            name='is_pregnant',
            field=models.CharField(choices=[('Yes', 'Yes'), ('No', 'No'), ('N/A', 'Not applicable')], help_text="If 'Yes', then stop. The patient cannot be part of this study. Select 'Not applicable' for male participants.", max_length=20, verbose_name='Are they currently pregnant?'),
        ),
        migrations.AlterField(
            model_name='subjectscreening',
            name='report_datetime',
            field=models.DateTimeField(default=datetime.datetime(2025, 5, 13, 12, 28, 7, 48981, tzinfo=utc), verbose_name='Report date and time.'),
        ),
        migrations.CreateModel(
            name='BaseRiskAssessmentStress',
            fields=[
                ('created', models.DateTimeField(blank=True, default=edc_base.utils.get_utcnow)),
                ('modified', models.DateTimeField(blank=True, default=edc_base.utils.get_utcnow)),
                ('user_created', edc_base.model_fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user created')),
                ('user_modified', edc_base.model_fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user modified')),
                ('hostname_created', models.CharField(blank=True, default=_socket.gethostname, help_text='System field. (modified on create only)', max_length=60)),
                ('hostname_modified', edc_base.model_fields.hostname_modification_field.HostnameModificationField(blank=True, help_text='System field. (modified on every save)', max_length=50)),
                ('revision', django_revision.revision_field.RevisionField(blank=True, editable=False, help_text='System field. Git repository tag:branch:commit.', max_length=75, null=True, verbose_name='Revision')),
                ('device_created', models.CharField(blank=True, max_length=10)),
                ('device_modified', models.CharField(blank=True, max_length=10)),
                ('id', edc_base.model_fields.uuid_auto_field.UUIDAutoField(blank=True, editable=False, help_text='System auto field. UUID primary key.', primary_key=True, serialize=False)),
                ('consent_model', models.CharField(editable=False, max_length=50, null=True)),
                ('consent_version', models.CharField(editable=False, max_length=10, null=True)),
                ('report_datetime', models.DateTimeField(default=edc_base.utils.get_utcnow, help_text="If reporting today, use today's date/time, otherwise use the date/time this information was reported.", validators=[edc_protocol.validators.datetime_not_before_study_start, edc_base.model_validators.date.datetime_not_future], verbose_name='Report Date')),
                ('work_stress', models.CharField(choices=[('strongly_agree', 'Stongly Agree'), ('agree', 'Agree'), ('neutral', 'Neutral'), ('disagree', 'Disagree'), ('strongly_disagree', 'Strongly Disagree')], max_length=30, verbose_name='Would you describe your job as stressful?')),
                ('home_stress', models.CharField(choices=[('strongly_agree', 'Stongly Agree'), ('agree', 'Agree'), ('neutral', 'Neutral'), ('disagree', 'Disagree'), ('strongly_disagree', 'Strongly Disagree')], max_length=30, verbose_name='Would you descibe your home life as stressful?')),
                ('subject_visit', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to='mock_study_subjects.SubjectVisit')),
            ],
            options={
                'verbose_name': 'Base Risk Assessment: Stress',
                'verbose_name_plural': 'Base Risk Assessment: Stress',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='BaseRiskAssessmentSleep',
            fields=[
                ('created', models.DateTimeField(blank=True, default=edc_base.utils.get_utcnow)),
                ('modified', models.DateTimeField(blank=True, default=edc_base.utils.get_utcnow)),
                ('user_created', edc_base.model_fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user created')),
                ('user_modified', edc_base.model_fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user modified')),
                ('hostname_created', models.CharField(blank=True, default=_socket.gethostname, help_text='System field. (modified on create only)', max_length=60)),
                ('hostname_modified', edc_base.model_fields.hostname_modification_field.HostnameModificationField(blank=True, help_text='System field. (modified on every save)', max_length=50)),
                ('revision', django_revision.revision_field.RevisionField(blank=True, editable=False, help_text='System field. Git repository tag:branch:commit.', max_length=75, null=True, verbose_name='Revision')),
                ('device_created', models.CharField(blank=True, max_length=10)),
                ('device_modified', models.CharField(blank=True, max_length=10)),
                ('id', edc_base.model_fields.uuid_auto_field.UUIDAutoField(blank=True, editable=False, help_text='System auto field. UUID primary key.', primary_key=True, serialize=False)),
                ('consent_model', models.CharField(editable=False, max_length=50, null=True)),
                ('consent_version', models.CharField(editable=False, max_length=10, null=True)),
                ('report_datetime', models.DateTimeField(default=edc_base.utils.get_utcnow, help_text="If reporting today, use today's date/time, otherwise use the date/time this information was reported.", validators=[edc_protocol.validators.datetime_not_before_study_start, edc_base.model_validators.date.datetime_not_future], verbose_name='Report Date')),
                ('sleep', models.CharField(choices=[('strongly_agree', 'Stongly Agree'), ('agree', 'Agree'), ('neutral', 'Neutral'), ('disagree', 'Disagree'), ('strongly_disagree', 'Strongly Disagree')], max_length=20, verbose_name="Do you normally get a full night's rest?")),
                ('restlessness', models.CharField(choices=[('strongly_agree', 'Stongly Agree'), ('agree', 'Agree'), ('neutral', 'Neutral'), ('disagree', 'Disagree'), ('strongly_disagree', 'Strongly Disagree')], max_length=20, verbose_name='Do you normally wakeup a lot when you go to bed?')),
                ('night_shift', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=3, verbose_name='Do you work nights?')),
                ('hours_slept', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(24)], verbose_name='How many hours of sleep do you normally get?')),
                ('subject_visit', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to='mock_study_subjects.SubjectVisit')),
            ],
            options={
                'verbose_name': 'Base Risk Assessment: Sleep',
                'verbose_name_plural': 'Base Risk Assessment: Sleep',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='BaseRiskAssessmentPhysicalActivity',
            fields=[
                ('created', models.DateTimeField(blank=True, default=edc_base.utils.get_utcnow)),
                ('modified', models.DateTimeField(blank=True, default=edc_base.utils.get_utcnow)),
                ('user_created', edc_base.model_fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user created')),
                ('user_modified', edc_base.model_fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user modified')),
                ('hostname_created', models.CharField(blank=True, default=_socket.gethostname, help_text='System field. (modified on create only)', max_length=60)),
                ('hostname_modified', edc_base.model_fields.hostname_modification_field.HostnameModificationField(blank=True, help_text='System field. (modified on every save)', max_length=50)),
                ('revision', django_revision.revision_field.RevisionField(blank=True, editable=False, help_text='System field. Git repository tag:branch:commit.', max_length=75, null=True, verbose_name='Revision')),
                ('device_created', models.CharField(blank=True, max_length=10)),
                ('device_modified', models.CharField(blank=True, max_length=10)),
                ('id', edc_base.model_fields.uuid_auto_field.UUIDAutoField(blank=True, editable=False, help_text='System auto field. UUID primary key.', primary_key=True, serialize=False)),
                ('consent_model', models.CharField(editable=False, max_length=50, null=True)),
                ('consent_version', models.CharField(editable=False, max_length=10, null=True)),
                ('report_datetime', models.DateTimeField(default=edc_base.utils.get_utcnow, help_text="If reporting today, use today's date/time, otherwise use the date/time this information was reported.", validators=[edc_protocol.validators.datetime_not_before_study_start, edc_base.model_validators.date.datetime_not_future], verbose_name='Report Date')),
                ('exercise', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=3, verbose_name='Do you execise regularly?')),
                ('days_per_week', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(7)], verbose_name='How many days per week do you execise?')),
                ('subject_visit', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to='mock_study_subjects.SubjectVisit')),
            ],
            options={
                'verbose_name': 'Base Risk Assessment: Physical Activity',
                'verbose_name_plural': 'Base Risk Assessment: Physical Activity',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='BaseRiskAssessmentHealth',
            fields=[
                ('created', models.DateTimeField(blank=True, default=edc_base.utils.get_utcnow)),
                ('modified', models.DateTimeField(blank=True, default=edc_base.utils.get_utcnow)),
                ('user_created', edc_base.model_fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user created')),
                ('user_modified', edc_base.model_fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user modified')),
                ('hostname_created', models.CharField(blank=True, default=_socket.gethostname, help_text='System field. (modified on create only)', max_length=60)),
                ('hostname_modified', edc_base.model_fields.hostname_modification_field.HostnameModificationField(blank=True, help_text='System field. (modified on every save)', max_length=50)),
                ('revision', django_revision.revision_field.RevisionField(blank=True, editable=False, help_text='System field. Git repository tag:branch:commit.', max_length=75, null=True, verbose_name='Revision')),
                ('device_created', models.CharField(blank=True, max_length=10)),
                ('device_modified', models.CharField(blank=True, max_length=10)),
                ('id', edc_base.model_fields.uuid_auto_field.UUIDAutoField(blank=True, editable=False, help_text='System auto field. UUID primary key.', primary_key=True, serialize=False)),
                ('consent_model', models.CharField(editable=False, max_length=50, null=True)),
                ('consent_version', models.CharField(editable=False, max_length=10, null=True)),
                ('report_datetime', models.DateTimeField(default=edc_base.utils.get_utcnow, help_text="If reporting today, use today's date/time, otherwise use the date/time this information was reported.", validators=[edc_protocol.validators.datetime_not_before_study_start, edc_base.model_validators.date.datetime_not_future], verbose_name='Report Date')),
                ('medication', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=3, verbose_name='Are you currently using any prescribed medication?')),
                ('reason_for_medication', models.TextField(blank=True, null=True, verbose_name='If you are, what is meant to treat?')),
                ('side_effects', models.CharField(blank=True, max_length=3, null=True, verbose_name='Does the medication have increased blood pressure as a side effect?')),
                ('heart_attack', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=3, verbose_name='Have you ever had a heart attach?')),
                ('aneurysm', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=3, verbose_name='Have you ever had an aneurysm?')),
                ('stroke', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=3, verbose_name='Have you ever had a stroke?')),
                ('kidney_disease', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=3, verbose_name='Have you ever had kidney disease?')),
                ('subject_visit', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to='mock_study_subjects.SubjectVisit')),
            ],
            options={
                'verbose_name': 'Base Risk Assessment: Health',
                'verbose_name_plural': 'Base Risk Assessment: Health',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='BaseRiskAssessmentFamily',
            fields=[
                ('created', models.DateTimeField(blank=True, default=edc_base.utils.get_utcnow)),
                ('modified', models.DateTimeField(blank=True, default=edc_base.utils.get_utcnow)),
                ('user_created', edc_base.model_fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user created')),
                ('user_modified', edc_base.model_fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user modified')),
                ('hostname_created', models.CharField(blank=True, default=_socket.gethostname, help_text='System field. (modified on create only)', max_length=60)),
                ('hostname_modified', edc_base.model_fields.hostname_modification_field.HostnameModificationField(blank=True, help_text='System field. (modified on every save)', max_length=50)),
                ('revision', django_revision.revision_field.RevisionField(blank=True, editable=False, help_text='System field. Git repository tag:branch:commit.', max_length=75, null=True, verbose_name='Revision')),
                ('device_created', models.CharField(blank=True, max_length=10)),
                ('device_modified', models.CharField(blank=True, max_length=10)),
                ('id', edc_base.model_fields.uuid_auto_field.UUIDAutoField(blank=True, editable=False, help_text='System auto field. UUID primary key.', primary_key=True, serialize=False)),
                ('consent_model', models.CharField(editable=False, max_length=50, null=True)),
                ('consent_version', models.CharField(editable=False, max_length=10, null=True)),
                ('report_datetime', models.DateTimeField(default=edc_base.utils.get_utcnow, help_text="If reporting today, use today's date/time, otherwise use the date/time this information was reported.", validators=[edc_protocol.validators.datetime_not_before_study_start, edc_base.model_validators.date.datetime_not_future], verbose_name='Report Date')),
                ('direct_family', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No'), ('Dont_know', 'Do not know')], max_length=15, verbose_name='Have your parents or grandparents ever been diagnosed with hypertension?')),
                ('extended_family', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No'), ('Dont_know', 'Do not know')], max_length=15, verbose_name='Have any members of your extended family, for example cousins, aunts, or uncles, ever been diagnosed with hypertension?')),
                ('subject_visit', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to='mock_study_subjects.SubjectVisit')),
            ],
            options={
                'verbose_name': 'Base Risk Assessment: Family',
                'verbose_name_plural': 'Base Risk Assessment: Family',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='BaseRiskAssessmentDiet',
            fields=[
                ('created', models.DateTimeField(blank=True, default=edc_base.utils.get_utcnow)),
                ('modified', models.DateTimeField(blank=True, default=edc_base.utils.get_utcnow)),
                ('user_created', edc_base.model_fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user created')),
                ('user_modified', edc_base.model_fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user modified')),
                ('hostname_created', models.CharField(blank=True, default=_socket.gethostname, help_text='System field. (modified on create only)', max_length=60)),
                ('hostname_modified', edc_base.model_fields.hostname_modification_field.HostnameModificationField(blank=True, help_text='System field. (modified on every save)', max_length=50)),
                ('revision', django_revision.revision_field.RevisionField(blank=True, editable=False, help_text='System field. Git repository tag:branch:commit.', max_length=75, null=True, verbose_name='Revision')),
                ('device_created', models.CharField(blank=True, max_length=10)),
                ('device_modified', models.CharField(blank=True, max_length=10)),
                ('id', edc_base.model_fields.uuid_auto_field.UUIDAutoField(blank=True, editable=False, help_text='System auto field. UUID primary key.', primary_key=True, serialize=False)),
                ('consent_model', models.CharField(editable=False, max_length=50, null=True)),
                ('consent_version', models.CharField(editable=False, max_length=10, null=True)),
                ('report_datetime', models.DateTimeField(default=edc_base.utils.get_utcnow, help_text="If reporting today, use today's date/time, otherwise use the date/time this information was reported.", validators=[edc_protocol.validators.datetime_not_before_study_start, edc_base.model_validators.date.datetime_not_future], verbose_name='Report Date')),
                ('salty_foods', models.CharField(choices=[('strongly_agree', 'Stongly Agree'), ('agree', 'Agree'), ('neutral', 'Neutral'), ('disagree', 'Disagree'), ('strongly_disagree', 'Strongly Disagree')], max_length=20, verbose_name='How often do you eat foods high in sodium and low in potassium, e.g polony, salty snacks, canned foods, etc?')),
                ('saturated_fats', models.CharField(choices=[('strongly_agree', 'Stongly Agree'), ('agree', 'Agree'), ('neutral', 'Neutral'), ('disagree', 'Disagree'), ('strongly_disagree', 'Strongly Disagree')], max_length=20, verbose_name='How often do you eat foods that have a lot of saturated fats, e.g fatty meats, butter, cheese, etc?')),
                ('red_meats', models.CharField(choices=[('strongly_agree', 'Stongly Agree'), ('agree', 'Agree'), ('neutral', 'Neutral'), ('disagree', 'Disagree'), ('strongly_disagree', 'Strongly Disagree')], max_length=20, verbose_name='How often do you eat red meat, e.g beef, goat, etc?')),
                ('fruits_and_veg', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=3, verbose_name='Do you eat at least 4 servings of fruits and vegitables daily?')),
                ('grain', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=3, verbose_name='Do you have at least 6 servings of grain daily?')),
                ('nuts', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=3, verbose_name='Do you have at least 4 servings of nuts and seeds per week?')),
                ('low_fat_dairy', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=3, verbose_name='Do you have at least 2 servings of fat free or low fat dairy per day?')),
                ('subject_visit', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to='mock_study_subjects.SubjectVisit')),
            ],
            options={
                'verbose_name': 'Base Risk Assessment: Diet',
                'verbose_name_plural': 'Base Risk Assessment: Diet',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='BaseRiskAssessmentDemographics',
            fields=[
                ('created', models.DateTimeField(blank=True, default=edc_base.utils.get_utcnow)),
                ('modified', models.DateTimeField(blank=True, default=edc_base.utils.get_utcnow)),
                ('user_created', edc_base.model_fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user created')),
                ('user_modified', edc_base.model_fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user modified')),
                ('hostname_created', models.CharField(blank=True, default=_socket.gethostname, help_text='System field. (modified on create only)', max_length=60)),
                ('hostname_modified', edc_base.model_fields.hostname_modification_field.HostnameModificationField(blank=True, help_text='System field. (modified on every save)', max_length=50)),
                ('revision', django_revision.revision_field.RevisionField(blank=True, editable=False, help_text='System field. Git repository tag:branch:commit.', max_length=75, null=True, verbose_name='Revision')),
                ('device_created', models.CharField(blank=True, max_length=10)),
                ('device_modified', models.CharField(blank=True, max_length=10)),
                ('id', edc_base.model_fields.uuid_auto_field.UUIDAutoField(blank=True, editable=False, help_text='System auto field. UUID primary key.', primary_key=True, serialize=False)),
                ('consent_model', models.CharField(editable=False, max_length=50, null=True)),
                ('consent_version', models.CharField(editable=False, max_length=10, null=True)),
                ('report_datetime', models.DateTimeField(default=edc_base.utils.get_utcnow, help_text="If reporting today, use today's date/time, otherwise use the date/time this information was reported.", validators=[edc_protocol.validators.datetime_not_before_study_start, edc_base.model_validators.date.datetime_not_future], verbose_name='Report Date')),
                ('marital_status', models.CharField(choices=[('single', 'Single'), ('married', 'Married'), ('divorced', 'Divorced'), ('widowed', 'Widowed'), ('OTHER', 'Other')], max_length=20)),
                ('marital_status_other', models.CharField(max_length=20)),
                ('race', models.CharField(choices=[('black', 'Black'), ('white', 'White'), ('asian', 'Asian'), ('hispanic', 'Hispanic'), ('OTHER', 'Other')], max_length=10)),
                ('race_other', models.CharField(max_length=10)),
                ('occupation', models.CharField(max_length=50, verbose_name='What is the highest level of education you have?')),
                ('education', models.CharField(choices=[('psle', 'PSLE'), ('jse', 'CJSE'), ('bgcse', 'BGCSE'), ('igcse', 'IGCSE'), ('undergraduate', 'Undergraduate'), ('masters', 'Masters'), ('phd', 'PHD'), ('OTHER', 'Other')], max_length=30, verbose_name='What is the highest level of education you have?')),
                ('subject_visit', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to='mock_study_subjects.SubjectVisit')),
            ],
            options={
                'verbose_name': 'Base Risk Assessment: Demographics',
                'verbose_name_plural': 'Base Risk Assessment: Demographics',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='BaseRiskAssessmentCaffeine',
            fields=[
                ('created', models.DateTimeField(blank=True, default=edc_base.utils.get_utcnow)),
                ('modified', models.DateTimeField(blank=True, default=edc_base.utils.get_utcnow)),
                ('user_created', edc_base.model_fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user created')),
                ('user_modified', edc_base.model_fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user modified')),
                ('hostname_created', models.CharField(blank=True, default=_socket.gethostname, help_text='System field. (modified on create only)', max_length=60)),
                ('hostname_modified', edc_base.model_fields.hostname_modification_field.HostnameModificationField(blank=True, help_text='System field. (modified on every save)', max_length=50)),
                ('revision', django_revision.revision_field.RevisionField(blank=True, editable=False, help_text='System field. Git repository tag:branch:commit.', max_length=75, null=True, verbose_name='Revision')),
                ('device_created', models.CharField(blank=True, max_length=10)),
                ('device_modified', models.CharField(blank=True, max_length=10)),
                ('id', edc_base.model_fields.uuid_auto_field.UUIDAutoField(blank=True, editable=False, help_text='System auto field. UUID primary key.', primary_key=True, serialize=False)),
                ('consent_model', models.CharField(editable=False, max_length=50, null=True)),
                ('consent_version', models.CharField(editable=False, max_length=10, null=True)),
                ('report_datetime', models.DateTimeField(default=edc_base.utils.get_utcnow, help_text="If reporting today, use today's date/time, otherwise use the date/time this information was reported.", validators=[edc_protocol.validators.datetime_not_before_study_start, edc_base.model_validators.date.datetime_not_future], verbose_name='Report Date')),
                ('consumes_caffeine', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=3, verbose_name='Do you regularlly drink caffinated drinks, e.g tea, coffee, energy drinks, etc.')),
                ('drinks_per_week', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(7)], verbose_name='How many days per week do you have a cafinated drink?')),
                ('amount_of_drinks', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(30)], verbose_name='How many drinks do you have on the days you do have cafinated drinks')),
                ('subject_visit', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to='mock_study_subjects.SubjectVisit')),
            ],
            options={
                'verbose_name': 'Base Risk Assessment: Caffeine',
                'verbose_name_plural': 'Base Risk Assessment: Caffeine',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='BaseRiskAssessmentAlcohol',
            fields=[
                ('created', models.DateTimeField(blank=True, default=edc_base.utils.get_utcnow)),
                ('modified', models.DateTimeField(blank=True, default=edc_base.utils.get_utcnow)),
                ('user_created', edc_base.model_fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user created')),
                ('user_modified', edc_base.model_fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user modified')),
                ('hostname_created', models.CharField(blank=True, default=_socket.gethostname, help_text='System field. (modified on create only)', max_length=60)),
                ('hostname_modified', edc_base.model_fields.hostname_modification_field.HostnameModificationField(blank=True, help_text='System field. (modified on every save)', max_length=50)),
                ('revision', django_revision.revision_field.RevisionField(blank=True, editable=False, help_text='System field. Git repository tag:branch:commit.', max_length=75, null=True, verbose_name='Revision')),
                ('device_created', models.CharField(blank=True, max_length=10)),
                ('device_modified', models.CharField(blank=True, max_length=10)),
                ('id', edc_base.model_fields.uuid_auto_field.UUIDAutoField(blank=True, editable=False, help_text='System auto field. UUID primary key.', primary_key=True, serialize=False)),
                ('consent_model', models.CharField(editable=False, max_length=50, null=True)),
                ('consent_version', models.CharField(editable=False, max_length=10, null=True)),
                ('report_datetime', models.DateTimeField(default=edc_base.utils.get_utcnow, help_text="If reporting today, use today's date/time, otherwise use the date/time this information was reported.", validators=[edc_protocol.validators.datetime_not_before_study_start, edc_base.model_validators.date.datetime_not_future], verbose_name='Report Date')),
                ('consumes_alcohol', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=3, verbose_name='Do you drink alcohol?')),
                ('drinks_per_week', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxLengthValidator(7)], verbose_name='How many days per week do you consume alcohol?')),
                ('amount_of_drinks', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxLengthValidator(30)], verbose_name='When you do drink, how many drinks do you normally have?')),
                ('subject_visit', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to='mock_study_subjects.SubjectVisit')),
            ],
            options={
                'verbose_name': 'Base Risk Assessment: Alcohol',
                'verbose_name_plural': 'Base Risk Assessment: Alcohol',
                'abstract': False,
            },
        ),
    ]

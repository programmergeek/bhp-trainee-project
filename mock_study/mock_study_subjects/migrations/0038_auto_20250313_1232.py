# Generated by Django 2.2.1 on 2025-03-13 12:32

import _socket
import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
from django.utils.timezone import utc
import django_revision.revision_field
import edc_base.model_fields.hostname_modification_field
import edc_base.model_fields.userfield
import edc_base.model_fields.uuid_auto_field
import edc_base.utils
import simple_history.models


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('mock_study_subjects', '0037_auto_20250313_1039'),
    ]

    operations = [
        migrations.AddField(
            model_name='subjectscreening',
            name='created',
            field=models.DateTimeField(blank=True, default=edc_base.utils.get_utcnow),
        ),
        migrations.AddField(
            model_name='subjectscreening',
            name='device_created',
            field=models.CharField(blank=True, max_length=10),
        ),
        migrations.AddField(
            model_name='subjectscreening',
            name='device_modified',
            field=models.CharField(blank=True, max_length=10),
        ),
        migrations.AddField(
            model_name='subjectscreening',
            name='hostname_created',
            field=models.CharField(blank=True, default=_socket.gethostname, help_text='System field. (modified on create only)', max_length=60),
        ),
        migrations.AddField(
            model_name='subjectscreening',
            name='hostname_modified',
            field=edc_base.model_fields.hostname_modification_field.HostnameModificationField(blank=True, help_text='System field. (modified on every save)', max_length=50),
        ),
        migrations.AddField(
            model_name='subjectscreening',
            name='modified',
            field=models.DateTimeField(blank=True, default=edc_base.utils.get_utcnow),
        ),
        migrations.AddField(
            model_name='subjectscreening',
            name='revision',
            field=django_revision.revision_field.RevisionField(blank=True, editable=False, help_text='System field. Git repository tag:branch:commit.', max_length=75, null=True, verbose_name='Revision'),
        ),
        migrations.AddField(
            model_name='subjectscreening',
            name='user_created',
            field=edc_base.model_fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user created'),
        ),
        migrations.AddField(
            model_name='subjectscreening',
            name='user_modified',
            field=edc_base.model_fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user modified'),
        ),
        migrations.AlterField(
            model_name='adverseevent',
            name='onset_date',
            field=models.DateField(default=datetime.datetime(2025, 3, 13, 12, 32, 46, 493635, tzinfo=utc)),
        ),
        migrations.AlterField(
            model_name='cbcbloodtestresult',
            name='date_tested',
            field=models.DateField(default=datetime.datetime(2025, 3, 13, 12, 32, 46, 492561, tzinfo=utc)),
        ),
        migrations.AlterField(
            model_name='subjectbloodsample',
            name='collection_date',
            field=models.DateField(default=datetime.datetime(2025, 3, 13, 12, 32, 46, 490328, tzinfo=utc)),
        ),
        migrations.AlterField(
            model_name='subjectscreening',
            name='id',
            field=edc_base.model_fields.uuid_auto_field.UUIDAutoField(blank=True, editable=False, help_text='System auto field. UUID primary key.', primary_key=True, serialize=False),
        ),
        migrations.AlterField(
            model_name='subjectscreening',
            name='report_datetime',
            field=models.DateTimeField(default=datetime.datetime(2025, 3, 13, 12, 32, 46, 483366, tzinfo=utc), verbose_name='Report date and time.'),
        ),
        migrations.CreateModel(
            name='HistoricalSubjectScreening',
            fields=[
                ('created', models.DateTimeField(blank=True, default=edc_base.utils.get_utcnow)),
                ('modified', models.DateTimeField(blank=True, default=edc_base.utils.get_utcnow)),
                ('user_created', edc_base.model_fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user created')),
                ('user_modified', edc_base.model_fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user modified')),
                ('hostname_created', models.CharField(blank=True, default=_socket.gethostname, help_text='System field. (modified on create only)', max_length=60)),
                ('hostname_modified', edc_base.model_fields.hostname_modification_field.HostnameModificationField(blank=True, help_text='System field. (modified on every save)', max_length=50)),
                ('revision', django_revision.revision_field.RevisionField(blank=True, editable=False, help_text='System field. Git repository tag:branch:commit.', max_length=75, null=True, verbose_name='Revision')),
                ('device_created', models.CharField(blank=True, max_length=10)),
                ('device_modified', models.CharField(blank=True, max_length=10)),
                ('id', edc_base.model_fields.uuid_auto_field.UUIDAutoField(blank=True, db_index=True, editable=False, help_text='System auto field. UUID primary key.')),
                ('screening_identifier', models.CharField(db_index=True, editable=False, max_length=36, verbose_name='Eligibility Identifier')),
                ('report_datetime', models.DateTimeField(default=datetime.datetime(2025, 3, 13, 12, 32, 46, 483366, tzinfo=utc), verbose_name='Report date and time.')),
                ('has_hypertension', models.CharField(choices=[('yes', 'Yes'), ('no', 'No')], help_text="If 'No', then stop. Patient cannot be part of the study.", max_length=3, verbose_name='Have they been diagnosed with hypertension?')),
                ('eligible', models.BooleanField(default=False, editable=False)),
                ('age', models.IntegerField(help_text='If the patient is not between the ages of 30 and 65, then stop, they cannot be part of the study.')),
                ('is_pregnant', models.CharField(choices=[('yes', 'Yes'), ('no', 'No')], help_text="If 'Yes', then stop. The patient cannot be part of this study. ", max_length=3, verbose_name='Are they currently pregnant?')),
                ('is_breastfeeding', models.CharField(choices=[('yes', 'Yes'), ('no', 'No')], help_text="If 'Yes', then stop. The patient cannot be part of this study.", max_length=3, verbose_name='Is the patient currently breastfeeding?')),
                ('has_allergies_to_drug', models.CharField(choices=[('yes', 'Yes'), ('no', 'No')], help_text="If 'Yes', then stop. The patient cannot be part of this study.", max_length=3, verbose_name='Does the patient have any known allergies to XYZ Drug?')),
                ('has_history_of_severe_cardiovascular_events', models.CharField(choices=[('yes', 'Yes'), ('no', 'No')], help_text="If 'Yes', then stop. The patient cannot be part of this study.", max_length=3, verbose_name='Does the patient have a history of sever cardiovascular events within the last 6 (six) months?')),
                ('enrollment_site', models.CharField(choices=[('gaborone_private_hospital', 'Gaborone Private Hospital (GPH)'), ('nyangabgwe_referral_hospital', 'Nyangabgwe Referral Hospital (NRH)'), ('princess_marina_hospital', 'Princess Marina Hospital (PMH)'), ('bokamoso_private_hospital', 'Bokamoso Private Hospital (BPH)')], help_text='Hospitals where subject is recruited.', max_length=100, null=True)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_id', edc_base.model_fields.uuid_auto_field.UUIDAutoField(primary_key=True, serialize=False)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Mock Study Eligibility',
                'verbose_name_plural': 'historical Mock Study Eligibility',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
    ]

# Generated by Django 2.2.1 on 2025-04-24 09:22

import _socket
import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
from django.utils.timezone import utc
import django_revision.revision_field
import edc_base.model_fields.hostname_modification_field
import edc_base.model_fields.userfield
import edc_base.utils
import simple_history.models


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('mock_study_prn', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='AdverseEvent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(blank=True, default=edc_base.utils.get_utcnow)),
                ('modified', models.DateTimeField(blank=True, default=edc_base.utils.get_utcnow)),
                ('user_created', edc_base.model_fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user created')),
                ('user_modified', edc_base.model_fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user modified')),
                ('hostname_created', models.CharField(blank=True, default=_socket.gethostname, help_text='System field. (modified on create only)', max_length=60)),
                ('hostname_modified', edc_base.model_fields.hostname_modification_field.HostnameModificationField(blank=True, help_text='System field. (modified on every save)', max_length=50)),
                ('revision', django_revision.revision_field.RevisionField(blank=True, editable=False, help_text='System field. Git repository tag:branch:commit.', max_length=75, null=True, verbose_name='Revision')),
                ('action_identifier', models.CharField(max_length=25, null=True)),
                ('subject_identifier', models.CharField(max_length=50)),
                ('tracking_identifier', models.CharField(max_length=30, null=True)),
                ('related_tracking_identifier', models.CharField(max_length=30, null=True)),
                ('parent_tracking_identifier', models.CharField(max_length=30, null=True)),
                ('description', models.TextField(help_text='Describe the adverse event')),
                ('severity', models.CharField(choices=[('mild', 'Mild'), ('moderate', 'Moderate'), ('severe', 'Severe'), ('death', 'Death')], help_text='Indicate the severity of the event. In the event of death then select "Death"', max_length=20)),
                ('onset_date', models.DateField(default=datetime.datetime(2025, 4, 24, 9, 22, 2, 892908, tzinfo=utc))),
                ('resolution_date', models.DateField()),
                ('action_taken', models.TextField()),
                ('outcome', models.TextField()),
                ('comment', models.TextField()),
            ],
            options={
                'verbose_name': 'Subject Adverse Event',
                'verbose_name_plural': 'Subject Adverse Events',
            },
        ),
        migrations.CreateModel(
            name='ComplianceReport',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(blank=True, default=edc_base.utils.get_utcnow)),
                ('modified', models.DateTimeField(blank=True, default=edc_base.utils.get_utcnow)),
                ('user_created', edc_base.model_fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user created')),
                ('user_modified', edc_base.model_fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user modified')),
                ('hostname_created', models.CharField(blank=True, default=_socket.gethostname, help_text='System field. (modified on create only)', max_length=60)),
                ('hostname_modified', edc_base.model_fields.hostname_modification_field.HostnameModificationField(blank=True, help_text='System field. (modified on every save)', max_length=50)),
                ('revision', django_revision.revision_field.RevisionField(blank=True, editable=False, help_text='System field. Git repository tag:branch:commit.', max_length=75, null=True, verbose_name='Revision')),
                ('action_identifier', models.CharField(max_length=25, null=True)),
                ('subject_identifier', models.CharField(max_length=50)),
                ('tracking_identifier', models.CharField(max_length=30, null=True)),
                ('related_tracking_identifier', models.CharField(max_length=30, null=True)),
                ('parent_tracking_identifier', models.CharField(max_length=30, null=True)),
                ('missed_days', models.TextField(verbose_name='How many times have you missed taking the study medication')),
                ('doses_prescribed', models.IntegerField(default=0)),
                ('doses_taken', models.IntegerField(default=0)),
                ('has_side_effects', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=3, verbose_name='Has the participant noticied any side effects from the medication?')),
                ('side_effects', models.TextField(verbose_name="If 'Yes', describe what they are")),
                ('comment', models.TextField()),
            ],
            options={
                'verbose_name': 'Compliance Report',
                'verbose_name_plural': 'Compliance Reports',
            },
        ),
        migrations.CreateModel(
            name='DeathReport',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(blank=True, default=edc_base.utils.get_utcnow)),
                ('modified', models.DateTimeField(blank=True, default=edc_base.utils.get_utcnow)),
                ('user_created', edc_base.model_fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user created')),
                ('user_modified', edc_base.model_fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user modified')),
                ('hostname_created', models.CharField(blank=True, default=_socket.gethostname, help_text='System field. (modified on create only)', max_length=60)),
                ('hostname_modified', edc_base.model_fields.hostname_modification_field.HostnameModificationField(blank=True, help_text='System field. (modified on every save)', max_length=50)),
                ('revision', django_revision.revision_field.RevisionField(blank=True, editable=False, help_text='System field. Git repository tag:branch:commit.', max_length=75, null=True, verbose_name='Revision')),
                ('action_identifier', models.CharField(max_length=25, null=True)),
                ('subject_identifier', models.CharField(max_length=50)),
                ('tracking_identifier', models.CharField(max_length=30, null=True)),
                ('related_tracking_identifier', models.CharField(max_length=30, null=True)),
                ('parent_tracking_identifier', models.CharField(max_length=30, null=True)),
                ('date_of_death', models.DateField()),
                ('cause_of_death', models.TextField()),
                ('is_death_date_estimated', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=3)),
                ('source_of_info', models.TextField(verbose_name='What is your source of information on the death of the participant?')),
                ('was_hospitalised', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=3, verbose_name='Was the participant hospitalised before their death?')),
                ('hospital_hospitalised', models.CharField(max_length=200, verbose_name='What is the name of the hospital the participant was hospitalised in?')),
                ('reason_hospitalised', models.TextField(verbose_name='If they were hospitalised, why?')),
                ('days_hospitalised', models.IntegerField(default=0, verbose_name='For how many days were they hospitalised?')),
            ],
            options={
                'verbose_name': 'Death Report',
                'verbose_name_plural': 'Death Reports',
            },
        ),
        migrations.CreateModel(
            name='FinalQuestionnaire',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(blank=True, default=edc_base.utils.get_utcnow)),
                ('modified', models.DateTimeField(blank=True, default=edc_base.utils.get_utcnow)),
                ('user_created', edc_base.model_fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user created')),
                ('user_modified', edc_base.model_fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user modified')),
                ('hostname_created', models.CharField(blank=True, default=_socket.gethostname, help_text='System field. (modified on create only)', max_length=60)),
                ('hostname_modified', edc_base.model_fields.hostname_modification_field.HostnameModificationField(blank=True, help_text='System field. (modified on every save)', max_length=50)),
                ('revision', django_revision.revision_field.RevisionField(blank=True, editable=False, help_text='System field. Git repository tag:branch:commit.', max_length=75, null=True, verbose_name='Revision')),
                ('action_identifier', models.CharField(max_length=25, null=True)),
                ('subject_identifier', models.CharField(max_length=50)),
                ('tracking_identifier', models.CharField(max_length=30, null=True)),
                ('related_tracking_identifier', models.CharField(max_length=30, null=True)),
                ('parent_tracking_identifier', models.CharField(max_length=30, null=True)),
                ('experience_rating', models.CharField(choices=[('very_positive', 'Very Positive'), ('positive', 'Positive'), ('neutral', 'Neutral'), ('negative', 'Negative'), ('very_negative', 'Very Negative')], max_length=20, verbose_name='How would you describe your experience as a participant in the study?')),
                ('study_purpose', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=3, verbose_name='Do you believe that the purpose of the study was clearly explained to you?')),
                ('study_purpose_grievance', models.TextField(verbose_name='Please leave a comment on why you believe the purpose of the study was not clearly explained to you.')),
                ('respectful_staff', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=3, verbose_name='Do you believe that the staff was respectful and professional?')),
                ('visit', models.CharField(choices=[('strongly_agree', 'Stongly Agree'), ('agree', 'Agree'), ('neutral', 'Neutral'), ('disagree', 'Disagree'), ('strongly_disagree', 'Strongly Disagree')], max_length=20, verbose_name='Was the visit schedule easy for you to work with?')),
                ('adherence', models.CharField(choices=[('strongly_agree', 'Stongly Agree'), ('agree', 'Agree'), ('neutral', 'Neutral'), ('disagree', 'Disagree'), ('strongly_disagree', 'Strongly Disagree')], max_length=20, verbose_name='Did you find it easy to take your medication as instructed?')),
                ('instruction_clearity', models.CharField(choices=[('strongly_agree', 'Stongly Agree'), ('agree', 'Agree'), ('neutral', 'Neutral'), ('disagree', 'Disagree'), ('strongly_disagree', 'Strongly Disagree')], max_length=20, verbose_name='Do you believe the instructions given were simple to understand and follow. If you disagree, please state why.')),
                ('instruction_clearity_grievance', models.TextField(blank=True, null=True, verbose_name='Please state what about the instructions were not clear.')),
                ('benefits', models.TextField(verbose_name='What do you believe were the benefits of participating in this study?')),
                ('challenges', models.TextField(verbose_name='What do you believe were the challenges you experiences because you were participating in this study?')),
                ('paricipate_again', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=3, verbose_name='Would like to participate in any future studies we conduct?')),
            ],
            options={
                'verbose_name': 'Final Questionnaire',
                'verbose_name_plural': 'Final Questionnaire',
            },
        ),
        migrations.CreateModel(
            name='HistoricalComplianceReport',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created', models.DateTimeField(blank=True, default=edc_base.utils.get_utcnow)),
                ('modified', models.DateTimeField(blank=True, default=edc_base.utils.get_utcnow)),
                ('user_created', edc_base.model_fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user created')),
                ('user_modified', edc_base.model_fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user modified')),
                ('hostname_created', models.CharField(blank=True, default=_socket.gethostname, help_text='System field. (modified on create only)', max_length=60)),
                ('hostname_modified', edc_base.model_fields.hostname_modification_field.HostnameModificationField(blank=True, help_text='System field. (modified on every save)', max_length=50)),
                ('revision', django_revision.revision_field.RevisionField(blank=True, editable=False, help_text='System field. Git repository tag:branch:commit.', max_length=75, null=True, verbose_name='Revision')),
                ('action_identifier', models.CharField(max_length=25, null=True)),
                ('subject_identifier', models.CharField(max_length=50)),
                ('tracking_identifier', models.CharField(max_length=30, null=True)),
                ('related_tracking_identifier', models.CharField(max_length=30, null=True)),
                ('parent_tracking_identifier', models.CharField(max_length=30, null=True)),
                ('missed_days', models.TextField(verbose_name='How many times have you missed taking the study medication')),
                ('doses_prescribed', models.IntegerField(default=0)),
                ('doses_taken', models.IntegerField(default=0)),
                ('has_side_effects', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=3, verbose_name='Has the participant noticied any side effects from the medication?')),
                ('side_effects', models.TextField(verbose_name="If 'Yes', describe what they are")),
                ('comment', models.TextField()),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Compliance Report',
                'verbose_name_plural': 'historical Compliance Reports',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalDeathReport',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created', models.DateTimeField(blank=True, default=edc_base.utils.get_utcnow)),
                ('modified', models.DateTimeField(blank=True, default=edc_base.utils.get_utcnow)),
                ('user_created', edc_base.model_fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user created')),
                ('user_modified', edc_base.model_fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user modified')),
                ('hostname_created', models.CharField(blank=True, default=_socket.gethostname, help_text='System field. (modified on create only)', max_length=60)),
                ('hostname_modified', edc_base.model_fields.hostname_modification_field.HostnameModificationField(blank=True, help_text='System field. (modified on every save)', max_length=50)),
                ('revision', django_revision.revision_field.RevisionField(blank=True, editable=False, help_text='System field. Git repository tag:branch:commit.', max_length=75, null=True, verbose_name='Revision')),
                ('action_identifier', models.CharField(max_length=25, null=True)),
                ('subject_identifier', models.CharField(max_length=50)),
                ('tracking_identifier', models.CharField(max_length=30, null=True)),
                ('related_tracking_identifier', models.CharField(max_length=30, null=True)),
                ('parent_tracking_identifier', models.CharField(max_length=30, null=True)),
                ('date_of_death', models.DateField()),
                ('cause_of_death', models.TextField()),
                ('is_death_date_estimated', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=3)),
                ('source_of_info', models.TextField(verbose_name='What is your source of information on the death of the participant?')),
                ('was_hospitalised', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=3, verbose_name='Was the participant hospitalised before their death?')),
                ('hospital_hospitalised', models.CharField(max_length=200, verbose_name='What is the name of the hospital the participant was hospitalised in?')),
                ('reason_hospitalised', models.TextField(verbose_name='If they were hospitalised, why?')),
                ('days_hospitalised', models.IntegerField(default=0, verbose_name='For how many days were they hospitalised?')),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Death Report',
                'verbose_name_plural': 'historical Death Reports',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalFinalQuestionnaire',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created', models.DateTimeField(blank=True, default=edc_base.utils.get_utcnow)),
                ('modified', models.DateTimeField(blank=True, default=edc_base.utils.get_utcnow)),
                ('user_created', edc_base.model_fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user created')),
                ('user_modified', edc_base.model_fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user modified')),
                ('hostname_created', models.CharField(blank=True, default=_socket.gethostname, help_text='System field. (modified on create only)', max_length=60)),
                ('hostname_modified', edc_base.model_fields.hostname_modification_field.HostnameModificationField(blank=True, help_text='System field. (modified on every save)', max_length=50)),
                ('revision', django_revision.revision_field.RevisionField(blank=True, editable=False, help_text='System field. Git repository tag:branch:commit.', max_length=75, null=True, verbose_name='Revision')),
                ('action_identifier', models.CharField(max_length=25, null=True)),
                ('subject_identifier', models.CharField(max_length=50)),
                ('tracking_identifier', models.CharField(max_length=30, null=True)),
                ('related_tracking_identifier', models.CharField(max_length=30, null=True)),
                ('parent_tracking_identifier', models.CharField(max_length=30, null=True)),
                ('experience_rating', models.CharField(choices=[('very_positive', 'Very Positive'), ('positive', 'Positive'), ('neutral', 'Neutral'), ('negative', 'Negative'), ('very_negative', 'Very Negative')], max_length=20, verbose_name='How would you describe your experience as a participant in the study?')),
                ('study_purpose', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=3, verbose_name='Do you believe that the purpose of the study was clearly explained to you?')),
                ('study_purpose_grievance', models.TextField(verbose_name='Please leave a comment on why you believe the purpose of the study was not clearly explained to you.')),
                ('respectful_staff', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=3, verbose_name='Do you believe that the staff was respectful and professional?')),
                ('visit', models.CharField(choices=[('strongly_agree', 'Stongly Agree'), ('agree', 'Agree'), ('neutral', 'Neutral'), ('disagree', 'Disagree'), ('strongly_disagree', 'Strongly Disagree')], max_length=20, verbose_name='Was the visit schedule easy for you to work with?')),
                ('adherence', models.CharField(choices=[('strongly_agree', 'Stongly Agree'), ('agree', 'Agree'), ('neutral', 'Neutral'), ('disagree', 'Disagree'), ('strongly_disagree', 'Strongly Disagree')], max_length=20, verbose_name='Did you find it easy to take your medication as instructed?')),
                ('instruction_clearity', models.CharField(choices=[('strongly_agree', 'Stongly Agree'), ('agree', 'Agree'), ('neutral', 'Neutral'), ('disagree', 'Disagree'), ('strongly_disagree', 'Strongly Disagree')], max_length=20, verbose_name='Do you believe the instructions given were simple to understand and follow. If you disagree, please state why.')),
                ('instruction_clearity_grievance', models.TextField(blank=True, null=True, verbose_name='Please state what about the instructions were not clear.')),
                ('benefits', models.TextField(verbose_name='What do you believe were the benefits of participating in this study?')),
                ('challenges', models.TextField(verbose_name='What do you believe were the challenges you experiences because you were participating in this study?')),
                ('paricipate_again', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=3, verbose_name='Would like to participate in any future studies we conduct?')),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Final Questionnaire',
                'verbose_name_plural': 'historical Final Questionnaire',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalSubjectOffStudy',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created', models.DateTimeField(blank=True, default=edc_base.utils.get_utcnow)),
                ('modified', models.DateTimeField(blank=True, default=edc_base.utils.get_utcnow)),
                ('user_created', edc_base.model_fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user created')),
                ('user_modified', edc_base.model_fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user modified')),
                ('hostname_created', models.CharField(blank=True, default=_socket.gethostname, help_text='System field. (modified on create only)', max_length=60)),
                ('hostname_modified', edc_base.model_fields.hostname_modification_field.HostnameModificationField(blank=True, help_text='System field. (modified on every save)', max_length=50)),
                ('revision', django_revision.revision_field.RevisionField(blank=True, editable=False, help_text='System field. Git repository tag:branch:commit.', max_length=75, null=True, verbose_name='Revision')),
                ('action_identifier', models.CharField(max_length=25, null=True)),
                ('subject_identifier', models.CharField(max_length=50)),
                ('tracking_identifier', models.CharField(max_length=30, null=True)),
                ('related_tracking_identifier', models.CharField(max_length=30, null=True)),
                ('parent_tracking_identifier', models.CharField(max_length=30, null=True)),
                ('report_datetime', models.DateTimeField()),
                ('reason', models.TextField()),
                ('off_study_date', models.DateField()),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Subject Off Study',
                'verbose_name_plural': 'historical Subject Off Study',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='SubjectOffStudy',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(blank=True, default=edc_base.utils.get_utcnow)),
                ('modified', models.DateTimeField(blank=True, default=edc_base.utils.get_utcnow)),
                ('user_created', edc_base.model_fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user created')),
                ('user_modified', edc_base.model_fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user modified')),
                ('hostname_created', models.CharField(blank=True, default=_socket.gethostname, help_text='System field. (modified on create only)', max_length=60)),
                ('hostname_modified', edc_base.model_fields.hostname_modification_field.HostnameModificationField(blank=True, help_text='System field. (modified on every save)', max_length=50)),
                ('revision', django_revision.revision_field.RevisionField(blank=True, editable=False, help_text='System field. Git repository tag:branch:commit.', max_length=75, null=True, verbose_name='Revision')),
                ('action_identifier', models.CharField(max_length=25, null=True)),
                ('subject_identifier', models.CharField(max_length=50)),
                ('tracking_identifier', models.CharField(max_length=30, null=True)),
                ('related_tracking_identifier', models.CharField(max_length=30, null=True)),
                ('parent_tracking_identifier', models.CharField(max_length=30, null=True)),
                ('report_datetime', models.DateTimeField()),
                ('reason', models.TextField()),
                ('off_study_date', models.DateField()),
            ],
            options={
                'verbose_name': 'Subject Off Study',
                'verbose_name_plural': 'Subject Off Study',
            },
        ),
        migrations.DeleteModel(
            name='AdverseEventActionModel',
        ),
    ]
